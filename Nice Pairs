Problem Name: Nice Pairs
Problem Tag: NPAIRS
Link: https://www.codechef.com/problems/NPAIRS

Question
Given a string S of length N containing only numeric characters, find the number of Nice Pairs. A Nice Pair is a pair of indices - (i,j) such that 1≤i<j≤N and j−i=|Sj−Si|

Solution

APPROACH 1

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef {
	public static void main (String[] args) throws java.lang.Exception	{
		// your code goes here
		Scanner scn = new Scanner(System.in);
		int t = scn.nextInt();
		StringBuilder sb = new StringBuilder();
		while(t-- > 0){
		    int n = scn.nextInt();
		    scn.nextLine();
		    String str = scn.nextLine();

            /* 
            we can write, j - i == |sj - si| as
                1. j - i = sj - si  => j - sj = i - si
                2. j - i = si - sj  => j + sj = i + si
                
            so we will store all indexes result in 2 different hashmaps and find the equal pairs
		    */
		    
		    HashMap<Long, Long> map1 = new HashMap<>();
		    HashMap<Long, Long> map2 = new HashMap<>();
		    for(int i=0; i<n; i++){
		        int val  = str.charAt(i) - '0';
		        long diff1 = i + 1 - val;
		        long diff2 = i + 1 + val;
		        
		        map1.put(diff1, map1.getOrDefault(diff1, 0L) + 1L);
		        map2.put(diff2, map2.getOrDefault(diff2, 0L) + 1L);
		    }
		    
		    
		    long ans = 0;
		    // for (j - sj = i - si)
		    for(Long key : map1.keySet()){
		        long val = map1.get(key);
		        long num = (val * (val - 1))/2;
		        ans += num;
		    }
		    
		    // for (j + sj = i + si)
		    for(Long key : map2.keySet()){
		        long val = map2.get(key);
		        long num = (val * (val - 1))/2;
		        ans += num;
		    }
		    
		    sb.append(ans + "\n");
		}
		
		System.out.println(sb);
	}
}
 

APPROACH 2

video Link: https://www.youtube.com/watch?v=1-cDspWMv_k

import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef {
    public static void main(String[] args) throws java.lang.Exception {
        // your code goes here
        Scanner scn = new Scanner(System.in);
        int t = scn.nextInt();
        StringBuilder sb = new StringBuilder();
        while (t--> 0) {
            int n = scn.nextInt();
            scn.nextLine();
            String str = scn.nextLine();

            int ans = 0;
            for (int i = 0; i < n; i++) {
                for (int j = i + 1; j < Math.min(n, i + 10); j++) {
                    if (j - i == Math.abs(str.charAt(i) - str.charAt(j))) {
                            ans++;
                        }
                    }
                }

                sb.append(ans + "\n");
            }
            System.out.println(sb);
        }
    }
