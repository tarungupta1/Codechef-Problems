Problem Name: Three Boxes
Problem Tag: THREEBOX
Link: https://www.codechef.com/problems/THREEBOX

Question
Chef has 3 boxes of sizes A, B, and C respectively. He puts the boxes in bags of size D (A≤B≤C≤D). Find the minimum number of bags Chef needs so that he can put each box 
in a bag. A bag can contain more than one box if the sum of sizes of boxes in the bag does not exceed the size of the bag.


Time Complexity: O(1) for each test case
Space Complexity: O(1) for each test case

Solution

#include <bits/stdc++.h>
#include <iostream>
using namespace std;
    
int main(void){
    ios_base::sync_with_stdio(0);
    cin.tie(0);    cout.tie(0);
    int t;  cin>>t;
    while(t--){
        int a, b, c, d;   cin>>a>>b>>c>>d;
        
        int ans;
        if(a + b + c <= d){
            ans = 1;
        }
        else if(a + b <= d){                    
            ans = 2;
        }
        /* will not check for (b + c) and (a + c) as ATQ, a <= b <= cif the sum of two smallest numbers is not smaller than the size of the bag, 
        then any other permutation will not be smaller than the bag size. */
        else{
            ans = 3;
        }
        
        cout<<ans<<"\n";       
    }
}
